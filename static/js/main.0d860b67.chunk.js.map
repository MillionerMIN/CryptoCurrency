{"version":3,"sources":["redux/selectors.ts","components/common/wrapper/Wrapper.tsx","icons/other/delete.svg","redux/walletReducer.ts","components/costWallet/CostWallet.tsx","api/api.ts","redux/appReducer.ts","redux/currencyListReducer.ts","components/common/barChart/BarChart.tsx","icons/parts/chevron-left.svg","components/common/isLoading/IsLoading.tsx","components/common/error/ModalError.tsx","components/information/Information.tsx","icons/person/avatar.svg","components/personInfo/ProfileInfo.tsx","components/common/spinner/Spinner.tsx","icons/error/error-429.jpeg","components/common/error/messageError.tsx","components/common/modal/ModalWindow.tsx","components/common/item/Item.tsx","components/common/paginate/Paginate.tsx","components/currency/Currency.tsx","components/common/barChart/PieChart.tsx","components/informationPanel/InformationPanel.tsx","components/content/Content.tsx","icons/digital-wallet.png","components/topCurrency/TopCurrency.tsx","components/common/button/button.tsx","components/main/Main.tsx","components/page/BasePage/BasePage.tsx","components/page/notFound/NotFound.tsx","components/routing/Routing.tsx","icons/social/telegram_icon.svg","icons/social/facebook_icon.svg","icons/social/google_icon.svg","icons/social/discord_icon.svg","components/socials/Socials.tsx","components/header/Header.tsx","components/footer/Footer.tsx","components/app/App.tsx","redux/store.ts","utils/localStorageUtil.ts","index.tsx"],"names":["setLoading","state","app","isLoading","setError","error","getDataCurrentCrypto","currencyList","currency","getCurrentCrypto","currentCur","getTopCurrency","topCurrency","getInfoCurrentCrypto","chartHistory","getTotalCount","totalCount","getCurrentPage","currentPage","getPerPage","perPage","getCostWallet","wallet","costWallet","getCurrentsWallet","getSessionCostWallet","sessionCostWallet","getPercentTransaction","percentTransaction","Wrapper","children","className","initialWalletState","removeCrypto","amount","type","CostWallet","dispatch","useDispatch","useSelector","arrayBoughtCurrency","element","map","item","id","count","resultUsd","toFixed","Button","variant","onClick","src","Delete","alt","instance","axios","create","baseURL","currencyAPI","get","offset","InitialAppState","setIsLoading","errorHandler","text","initialCurrencyState","setTopCurrency","setCurrentPageAC","BarChart","props","infoData","arrDate","i","date","slice","arrPriseUsd","priceUsd","data","labels","datasets","label","toUpperCase","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","IsLoading","ModalError","Information","rank","symbol","marketCapUsd","supply","changePercent24Hr","volumeUsd24Hr","vwap24Hr","infoCurrentCrypto","useParams","loading","useEffect","a","res","setCurrencyHistoryTC","setCurrentCurrencyTC","table","to","ChevronLeft","ProfileInfo","Ava","Spinner","MessageError","Error429","ModalWindow","changeHandler","handleClose","useState","cur","setCur","Modal","show","onHide","animation","Header","closeButton","Title","Body","InputGroup","Text","FormControl","aria-label","onChange","e","currentTarget","value","Footer","Item","name","setShow","cost","history","useHistory","onShowCloseModal","clazz","push","numberCur","newCur","Paginate","pageSize","onPageChange","pageCounter","Math","ceil","pages","curPage","toString","page","Currency","items","PieChart","hoverOffset","InformationPanel","Content","active","percent","elementPage","TopCurrency","topCur","el","fix","ButtonMain","onChangeButton","Main","activeBtn","button","btn","Logo","BasePage","setActive","length","setCurrencyListTC","pageNumber","NotFound","version","xmlns","viewBox","d","width","height","fill","stroke","stroke-width","stroke-miterlimit","cx","cy","r","stroke-linecap","opacity","x1","y1","x2","y2","clip-path","stroke-linejoin","transform","rx","ry","points","Routing","exact","path","render","component","Socials","Telegram","FaceBook","Google","Discord","arrayItems","hash","click","setClick","handleClick","HeaderLogo","FooterLogo","App","preloadedState","Container","saveState","key","serializedState","JSON","stringify","localStorage","setItem","rootReducer","combineReducers","action","filter","addAsset","find","removeAsset","persistedWalletString","getItem","persistedCostWalletString","persistedCurrentPageString","parse","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","getState","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d860b67.chunk.js","sourcesContent":["import { AppRootStateType } from './store';\n\n//selectors appReducer\nexport const setLoading = (state: AppRootStateType) => {\n  return state.app.isLoading\n}\nexport const setError = (state: AppRootStateType) => {\n  return state.app.error\n}\n// export const setActiveBtn = (state: AppRootStateType) => {\n//   return state.app.activeBtn\n// }\n\n\n//selects CurrencyListReducer\nexport const getDataCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.currency\n}\nexport const getCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.currentCur\n}\nexport const getTopCurrency = (state: AppRootStateType) => {\n  return state.currencyList.topCurrency\n}\nexport const getInfoCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.chartHistory\n}\nexport const getTotalCount = (state: AppRootStateType) => {\n  return state.currencyList.totalCount\n}\nexport const getCurrentPage = (state: AppRootStateType) => {\n  return state.currencyList.currentPage\n}\nexport const getPerPage = (state: AppRootStateType) => {\n  return state.currencyList.perPage\n}\n\n//selects Wallet-reducer\nexport const getCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.costWallet\n}\nexport const getCurrentsWallet = (state: AppRootStateType) => {\n  return state.wallet.wallet\n}\nexport const getSessionCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.sessionCostWallet\n}\nexport const getPercentTransaction = (state: AppRootStateType): number => {\n  return state.wallet.percentTransaction\n}","import './wrapper.scss';\n\nexport const Wrapper: React.FunctionComponent = ({ children }): JSX.Element => {\n  return <div className=\"wrapper wrapper_pd20 wrapper_pd10\">{children}</div>;\n};\n","export default __webpack_public_path__ + \"static/media/delete.96a13fed.svg\";","const initialWalletState = {\n  wallet: [] as CurrencyWalletType[],\n  costWallet: 0,\n  sessionCostWallet: 0,\n  percentTransaction: 0,\n}\n\nexport const walletReducer = (state: InitialWalletStateType = initialWalletState, action: ActionsType): InitialWalletStateType => {\n\n  switch (action.type) {\n    case 'ADD-CRYPTO': {\n      const addAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (addAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd + action.amount.resultUsd;\n            item.count = item.count + action.amount.count;\n          }\n        })\n        const percentTransaction = +(action.amount.resultUsd * 100 / state.costWallet).toFixed(3)\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd, percentTransaction: percentTransaction }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n\n    case 'REMOVE-CRYPTO': {\n      const removeAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (removeAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd < action.amount.resultUsd ? item.resultUsd - item.resultUsd : item.resultUsd - action.amount.resultUsd\n            item.count = item.count < action.amount.count ? item.count - item.count : item.count - action.amount.count;\n          }\n        })\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n    case 'COST-WALLET': {\n      return {\n        ...state\n      }\n    }\n    case 'DELETE-WALLET':\n      return { ...state, wallet: [], costWallet: 0 }\n    default:\n      return state;\n  }\n}\n\n//action\nexport const addCrypto = (amount: CurrencyWalletType) => ({ type: 'ADD-CRYPTO', amount } as const)\nexport const removeCrypto = (amount: CurrencyWalletType) => ({ type: 'REMOVE-CRYPTO', amount } as const)\nexport const costWallet = (sum: string) => ({ type: 'COST-WALLET', sum } as const)\nexport const deleteWallet = () => ({ type: 'DELETE-WALLET' } as const)\n\n\n//Type\nexport type CurrencyWalletType = {\n  id: string\n  count: number\n  resultUsd: number\n}\nexport type InitialWalletStateType = typeof initialWalletState\n\ntype ActionsType = ReturnType<typeof addCrypto> | ReturnType<typeof removeCrypto> | ReturnType<typeof costWallet> | ReturnType<typeof deleteWallet>","import { Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCostWallet, getCurrentsWallet } from '../../redux/selectors';\nimport { AppRootStateType } from '../../redux/store';\nimport { Wrapper } from '../common/wrapper/Wrapper';\nimport Delete from '../../icons/other/delete.svg';\nimport './costWallet.scss';\nimport {\n  CurrencyWalletType,\n  deleteWallet,\n  removeCrypto,\n} from '../../redux/walletReducer';\n\nexport const CostWallet = () => {\n  const dispatch = useDispatch();\n  const costWallet = useSelector<AppRootStateType, number>(getCostWallet);\n  let arrayBoughtCurrency = useSelector<AppRootStateType, CurrencyWalletType[]>(\n    getCurrentsWallet\n  );\n\n  const onDeleteWallet = () => {\n    dispatch(deleteWallet());\n  };\n\n  const onDeleteCrypto = (coin: CurrencyWalletType) => {\n    dispatch(removeCrypto(coin));\n  };\n\n  const element = arrayBoughtCurrency.map((item) => (\n    <div className=\"cost-wallet__group\">\n      <div className=\"cost-wallet__name-currency\">{item.id}</div>\n      <div className=\"cost-wallet__count-currency\">{item.count}</div>\n      <div className=\"cost-wallet__cost-currency\">\n        {item.resultUsd.toFixed(2)} $\n      </div>\n      <Button variant=\"danger\" onClick={() => onDeleteCrypto(item)}>\n        <img src={Delete} alt=\"delete\" />\n      </Button>\n    </div>\n  ));\n\n  return (\n    <section className=\"cost-wallet cost-wallet_mr\">\n      <div className=\"cost-wallet__wrapper\">\n        <Wrapper>\n          <div className=\"cost-wallet__balance\">\n            <div className=\"cost-wallet__title\">Balance:</div>\n            <div className=\"cost-wallet__cost\">{costWallet} $</div>\n          </div>\n        </Wrapper>\n        <Wrapper>\n          <div className=\"cost-wallet__delete\">\n            <button className=\"btn btn_delete\" onClick={onDeleteWallet}>\n              Delete\n            </button>\n          </div>\n        </Wrapper>\n        <div className=\"cost-wallet__coins\">\n          <Wrapper>\n            <div className=\"cost-wallet__title\">Currency Wallet</div>\n            {element}\n          </Wrapper>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.coincap.io/v2/',\n})\n\n//API\nexport const currencyAPI = {\n  getStillCurrencyList() {\n    return instance.get<CurrencyListType>(`assets`)\n  },\n  getCurrencyList(offset: number, perPage: number) {\n    const promise = instance.get<CurrencyListType>(`assets?offset=${offset}&limit=${perPage}`)\n    return promise;\n  },\n  getCurrentCurrency(id: string) {\n    return instance.get<CurrentCurrencyType>(`assets/${id}`)\n  },\n  getTopCurrency(perPage: number) {\n    return instance.get<CurrencyListType>(`asses?limit=${perPage}`)\n  },\n  getCurrencyHistory(id: string) {\n    const promise = instance.get<CurrencyHistoryListType>(`assets/${id}/history?interval=d1`);\n    return promise;\n  }\n}\n\n//Type\nexport type CurrencyType = {\n  id: string\n  rank: string\n  symbol: string\n  name: string\n  supply: string\n  maxSupply: string\n  marketCapUsd: string\n  volumeUsd24Hr: string\n  priceUsd: string\n  changePercent24Hr: string\n  vwap24Hr: string\n}\n\nexport type CurrencyHistoryType = {\n  priceUsd: string,\n  time: number\n  date: string\n}\n\nexport type CurrencyHistoryListType = {\n  data: CurrencyHistoryType[]\n  timestamp: number\n}\nexport type CurrentCurrencyType = {\n  data: CurrencyType\n  timestamp: number\n}\n\nexport type CurrencyListType = {\n  data: CurrencyType[]\n  timestamp: number\n}\n\n","const InitialAppState = {\n  isLoading: false,\n  error: '' as RequestType,\n}\n\n\n\nexport const appReducer = (state = InitialAppState, action: AppActionType): InitialAppStateType => {\n  switch (action.type) {\n    case 'SET-IS-LOADING':\n      return { ...state, isLoading: action.isLoading }\n    case 'ERROR-HANDLER':\n      return { ...state, error: action.text }\n    case 'SET-BUTTONS':\n      return { ...state }\n    case 'CHANGE-ACTIVE-BUTTON':\n      return { ...state }\n    default:\n      return state\n  }\n}\n\nexport const setIsLoading = (isLoading: boolean) => ({\n  type: 'SET-IS-LOADING', isLoading\n} as const)\nexport const errorHandler = (text: RequestType) => ({ type: 'ERROR-HANDLER', text } as const)\nexport const setButtons = () => ({ type: 'SET-BUTTONS' } as const)\nexport const changeActiveButton = (active: boolean) => ({\n  type: 'CHANGE-ACTIVE-BUTTON', active\n} as const)\n\ntype InitialAppStateType = typeof InitialAppState\n\ntype AppActionType = ReturnType<typeof setIsLoading> | ReturnType<typeof errorHandler> | ReturnType<typeof changeActiveButton> | ReturnType<typeof setButtons>\n\nexport type ButtonsType = {\n  buttons: ButtonType[]\n}\nexport type ButtonType = {\n  value: string\n  active: boolean\n}\nexport type RequestType = 'error' | ''","\nimport { Dispatch } from 'redux';\nimport { currencyAPI, CurrencyHistoryType, CurrencyType } from '../api/api';\nimport { errorHandler, setIsLoading } from './appReducer';\n\nconst initialCurrencyState = {\n  currency: [] as CurrencyType[],\n  currentCur: {} as CurrencyType,\n  topCurrency: [] as CurrencyType[],\n  chartHistory: [] as CurrencyHistoryType[],\n  currentPage: 0,\n  perPage: 10,\n  totalCount: 0,\n};\n\nexport const currencyListReducer = (\n  state = initialCurrencyState,\n  action: ActionsType\n): InitialCurrencyStateType => {\n  switch (action.type) {\n    case 'SET-CURRENCY':\n      return { ...state, currency: action.currencyList };\n    case 'SET-CURRENT-CURRENCY':\n      return { ...state, currentCur: action.currentCur };\n    case 'SET-TOP-CURRENCY':\n      return { ...state, topCurrency: action.topCurrency.filter(item => +item.rank <= 3) }\n    case 'GET-HISTORY':\n      return { ...state, chartHistory: action.chartHistory };\n    case 'SET-CURRENT-PAGE':\n      return { ...state, currentPage: action.currentPage };\n    case 'SET-TOTAL-COUNT':\n      return { ...state, totalCount: action.totalCount };\n    default:\n      return state;\n  }\n};\n\n//actions\nexport const setCurrencyAC = (currencyList: CurrencyType[]) =>\n  ({ type: 'SET-CURRENCY', currencyList } as const);\nexport const setCurrentCurrencyAC = (currentCur: CurrencyType) => (\n  { type: 'SET-CURRENT-CURRENCY', currentCur } as const)\nexport const setTopCurrency = (topCurrency: CurrencyType[]) => ({ type: 'SET-TOP-CURRENCY', topCurrency } as const)\nexport const getHistoryAC = (chartHistory: CurrencyHistoryType[]) =>\n  ({ type: 'GET-HISTORY', chartHistory } as const);\nexport const setCurrentPageAC = (currentPage: number) => (\n  { type: 'SET-CURRENT-PAGE', currentPage } as const)\nexport const setTotalCountAC = (totalCount: number) =>\n  ({ type: 'SET-TOTAL-COUNT', totalCount } as const)\n\n//Thunks\nexport const setCurrencyListTC = (currentPage: number, perPage: number) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    dispatch(setCurrentPageAC(currentPage))\n    const res = await currencyAPI.getCurrencyList(currentPage, perPage)\n    dispatch(setCurrencyAC(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(errorHandler('error'))\n    dispatch(setIsLoading(false))\n  }\n};\n\nexport const setCurrentCurrencyTC = (id: string) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getCurrentCurrency(id)\n    dispatch(setCurrentCurrencyAC(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\nexport const setCurrencyHistoryTC = (id: string) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getCurrencyHistory(id)\n    dispatch(getHistoryAC(res.data.data));\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\nexport const setTotalCounterTC = () => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getStillCurrencyList()\n    dispatch(setTotalCountAC(res.data.data.length))\n    dispatch(setTopCurrency(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\ntype InitialCurrencyStateType = typeof initialCurrencyState;\n\ntype ActionsType =\n  | ReturnType<typeof setCurrencyAC>\n  | ReturnType<typeof setCurrentCurrencyAC>\n  | ReturnType<typeof setTopCurrency>\n  | ReturnType<typeof getHistoryAC>\n  | ReturnType<typeof setCurrentPageAC>\n  | ReturnType<typeof setTotalCountAC>\n  | ReturnType<typeof errorHandler>\n  | ReturnType<typeof setIsLoading>\n","import { Bar } from 'react-chartjs-2';\nimport { CurrencyHistoryType } from '../../../api/api';\n\ntype BarChartPropsType = {\n  id: string;\n  infoData: CurrencyHistoryType[];\n};\n\nexport const BarChart = (props: BarChartPropsType) => {\n  const { id, infoData } = props;\n  const arrDate = infoData.map((i) => i.date.slice(0, 10));\n  const arrPriseUsd = infoData.map((i) => i.priceUsd);\n\n  const data = {\n    labels: arrDate,\n    datasets: [\n      {\n        label: id.toUpperCase(),\n        data: arrPriseUsd,\n        backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)'],\n        borderColor: ['rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return <Bar data={data} options={options} />;\n};\n","export default __webpack_public_path__ + \"static/media/chevron-left.c80cdd8e.svg\";","import './isLoading.scss';\n\nexport const IsLoading = () => {\n  return (\n    <div className=\"modalInner\">\n      <div className=\"isLoadingBlock\"></div>\n    </div>\n  );\n};\n","import './modalError.scss';\n\nexport const ModalError = () => {\n  return (\n    <div className=\"modal-error modal-error_position\">\n      <div className=\"modal-error__text\">\n        Network error !!! Reload this page\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n  setCurrencyHistoryTC,\n  setCurrentCurrencyTC,\n} from '../../redux/currencyListReducer';\nimport { AppRootStateType } from '../../redux/store';\nimport { BarChart } from '../common/barChart/BarChart';\nimport ChevronLeft from '../../icons/parts/chevron-left.svg';\nimport {\n  getCurrentCrypto,\n  getInfoCurrentCrypto,\n  setError,\n  setLoading,\n} from '../../redux/selectors';\nimport { CurrencyHistoryType, CurrencyType } from '../../api/api';\nimport './Information.scss';\nimport { IsLoading } from '../common/isLoading/IsLoading';\nimport { ModalError } from '../common/error/ModalError';\n\nexport const Information = () => {\n  const dispatch = useDispatch();\n  const {\n    rank,\n    symbol,\n    priceUsd,\n    marketCapUsd,\n    supply,\n    changePercent24Hr,\n    volumeUsd24Hr,\n    vwap24Hr,\n  } = useSelector<AppRootStateType, CurrencyType>(getCurrentCrypto);\n\n  const infoCurrentCrypto = useSelector<\n    AppRootStateType,\n    CurrencyHistoryType[]\n  >(getInfoCurrentCrypto);\n\n  const { id } = useParams<{ id: string }>();\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n  const error = useSelector<AppRootStateType, string>(setError);\n\n  useEffect(() => {\n    dispatch(setCurrencyHistoryTC(id));\n    dispatch(setCurrentCurrencyTC(id));\n  }, [dispatch, id]);\n\n  const table = (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Rank</th>\n          <th>Symbol</th>\n          <th>Price</th>\n          <th>Market Cap</th>\n          <th>Supply</th>\n          <th>Change 24Hr</th>\n          <th>Volume 24Hr</th>\n          <th>VWAP24Hr</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{rank}</td>\n          <td>{symbol}</td>\n          <td>{'$' + (+priceUsd).toFixed(2)}</td>\n          <td>{'$' + (+marketCapUsd).toFixed(2)}</td>\n          <td>{(+supply).toFixed(2) + 'm'}</td>\n          <td\n            className={\n              +changePercent24Hr > 0 ? 'table__text_up' : 'table__text_down'\n            }\n          >\n            {(+changePercent24Hr).toFixed(2) + '%'}\n          </td>\n          <td>{'$' + (+volumeUsd24Hr).toFixed(2)}</td>\n          <td>{'$' + (+vwap24Hr).toFixed(2)}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  return (\n    <section className=\"information information_mr20 information_mr10   information_pd15 information_pd10-20 \">\n      {loading && <IsLoading />}\n      <div className=\"row\">\n        <div className=\"information__panel  information__panel_mb20 information__panel_mb10\">\n          <div>\n            <Link className=\"information__link\" to={`/`}>\n              <span>\n                <img src={ChevronLeft} alt=\"React Logo\" />\n                Back\n              </span>\n            </Link>\n          </div>\n        </div>\n        {error === 'error' && <ModalError />}\n        {table}\n        <div className=\"information__barChart\">\n          <BarChart infoData={infoCurrentCrypto} id={id} />\n        </div>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/avatar.eb51d125.svg\";","import Ava from '../../icons/person/avatar.svg';\n\nimport './profileInfo.scss';\n\nexport const ProfileInfo = () => {\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__avatar\">\n        <img className='profile__img' src={Ava} alt=\"ava\" />\n      </div>\n      <span className=\"profile__name\">profile@mail.com</span>\n    </div>\n  );\n};\n","import './spinner.css';\n\nexport function Spinner() {\n  return (\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/error-429.55b8d755.jpeg\";","import Error429 from '../../../icons/error/error-429.jpeg';\n\nimport './messageError.scss';\n\nexport const MessageError = () => {\n  return (\n    <div className=\"message-error\">\n      <img className='message-error__img' src={Error429} alt=\"error429\" />\n    </div>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\nimport { CurrencyType } from '../../../api/api';\n\nimport './modalWindow.scss';\n\ntype ModalWindowPropsType = {\n  data: CurrencyType;\n  handleClose: () => void;\n  changeHandler: (numberCur: number, value: string) => void;\n};\n\nexport const ModalWindow = (props: ModalWindowPropsType) => {\n  const { changeHandler, handleClose } = props;\n  const { id, priceUsd } = props.data;\n  const [cur, setCur] = useState<number>(0);\n\n  const onAddAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n  const onRemoveAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n\n  const onChangeValueInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setCur(+e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Modal show={true} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add in the Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text>{id}</InputGroup.Text>\n            <FormControl\n              type=\"number\"\n              aria-label=\"Amount (to the nearest dollar)\"\n              onChange={onChangeValueInput}\n            />\n            <InputGroup.Text>{priceUsd + ' $'}</InputGroup.Text>\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => onRemoveAssetsHandler('sale')}\n          >\n            Sale\n          </Button>\n          <Button variant=\"primary\" onClick={() => onAddAssetsHandler('buy')}>\n            Buy\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","import { Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CurrencyType } from '../../../api/api';\nimport { ModalWindow } from '../modal/ModalWindow';\nimport './item.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCrypto, removeCrypto } from '../../../redux/walletReducer';\n\ntype ItemPropsType = {\n  data: CurrencyType;\n};\n\nexport const Item = (props: ItemPropsType) => {\n  const { symbol, name, priceUsd, id } = props.data;\n  const [show, setShow] = useState(false);\n  const cost = +priceUsd;\n  const history = useHistory();\n  const onInfoHandler = () => {\n    return history.push(`/assets/${id}`);\n  };\n  const onShowCloseModal = () => {\n    setShow(!show);\n  };\n\n  const dispatch = useDispatch();\n  //Handler Buy and Sale currency\n  const onChangeHandler = (numberCur: number, value: string) => {\n    const newCur = {\n      id: id,\n      count: numberCur,\n      resultUsd: numberCur * +priceUsd,\n    };\n    if (value === 'buy') {\n      dispatch(addCrypto(newCur));\n      setShow(!show);\n    }\n    if (value === 'sale') {\n      dispatch(removeCrypto(newCur));\n      setShow(!show);\n    }\n  };\n  //Function is check even number\n  function isEven(value: number) {\n    return !(value % 2);\n  }\n  const clazz = isEven(+props.data.rank) ? 'item_bg' : '';\n\n  return (\n    <div className={`item item_mb item_pd ${clazz}`}>\n      <Link onClick={onInfoHandler} className=\"item__link\" to={`/assets/${id}`}>\n        <div className=\"item__symbol\">{symbol}</div>\n        <div className=\"item__text\">{name}</div>\n        <div className=\"item__cost\">{cost.toFixed(2)}</div>\n      </Link>\n      <Button variant=\"outline-success\" onClick={onShowCloseModal}>\n        +\n      </Button>\n      {show && (\n        <ModalWindow\n          handleClose={onShowCloseModal}\n          changeHandler={onChangeHandler}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n};","import './paginate.scss';\n\ntype PaginatePropsType = {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Paginate = (props: PaginatePropsType) => {\n  const { totalCount, pageSize, currentPage, onPageChange } = props;\n\n  //getting the right number of buttons\n  const pageCounter = Math.ceil(totalCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pageCounter; i++) {\n    pages.push(i);\n  }\n\n  const curPage = currentPage ? +currentPage.toString()[0] + 1 : 1;\n\n  return (\n    <div className=\"paginate paginate_mb10\">\n      {pages.map((page) => (\n        <span\n          key={page}\n          className={\n            curPage === page\n              ? 'paginate__span paginate__span_active'\n              : 'paginate__span'\n          }\n          onClick={() => {\n            onPageChange(page);\n          }}\n        >\n          {page}\n        </span>\n      ))}\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { setError } from '../../redux/selectors';\nimport { AppRootStateType } from '../../redux/store';\nimport { MessageError } from '../common/error/messageError';\nimport { Item } from '../common/item/Item';\nimport { Paginate } from '../common/paginate/Paginate';\n\nimport { ContentPropsType } from '../content/Content';\nimport './currency.scss';\n\ntype CurrencyPropsType = {\n  data: ContentPropsType;\n};\n\nexport const Currency = (props: CurrencyPropsType) => {\n  const { data, totalCount, currentPage, perPage, onPageChange } = props.data;\n  const items = data.map((item) => <Item key={item.id} data={item} />);\n  const error = useSelector<AppRootStateType, string>(setError);\n  return (\n    <div className=\"currency\">\n      <Paginate\n        totalCount={totalCount}\n        pageSize={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      {error ? <MessageError /> : items}\n    </div>\n  );\n};\n","import { Line, Pie } from 'react-chartjs-2';\n\nexport const PieChart = () => {\n  const data = {\n    type: 'bar',\n    labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [\n      {\n        label: 'My First Dataset',\n        data: [300, 50, 100],\n        backgroundColor: [\n          'rgb(255, 99, 132)',\n          'rgb(54, 162, 235)',\n          'rgb(255, 205, 86)',\n        ],\n        hoverOffset: 4,\n      },\n    ],\n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n  };\n\n  return (\n    <Pie\n      data={data}\n      options={{\n        scales: {\n          y: {\n            beginAtZero: false,\n          },\n        },\n      }}\n    />\n  );\n};\n","import { PieChart } from '../common/barChart/PieChart';\nimport './informationPanel.scss';\n\nexport const InformationPanel = () => {\n  return (\n    <div className=\"information-panel\">\n      <PieChart />\n    </div>\n  );\n};\n","import { Wrapper } from '../common/wrapper/Wrapper';\nimport { ProfileInfo } from '../personInfo/ProfileInfo';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../redux/store';\nimport {\n  getCostWallet,\n  getPercentTransaction,\n  getSessionCostWallet,\n  // setError,\n  setLoading,\n} from '../../redux/selectors';\n\nimport './content.scss';\nimport { Spinner } from '../common/spinner/Spinner';\nimport { CurrencyType } from '../../api/api';\nimport { Currency } from '../currency/Currency';\nimport { InformationPanel } from '../informationPanel/InformationPanel';\n\nexport type ContentPropsType = {\n  data: CurrencyType[];\n  totalCount: number;\n  currentPage: number;\n  perPage: number;\n  onPageChange: (pageNumber: number) => void;\n  active: boolean;\n};\n\nexport const Content = (props: ContentPropsType) => {\n  const { active } = props;\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n  // const error = useSelector<AppRootStateType, string>(setError);\n  // const activeBtn = useSelector<AppRootStateType, string>(setActiveBtn);\n\n  const costWallet = useSelector<AppRootStateType, number>(getCostWallet);\n  const sessionCostWallet = useSelector<AppRootStateType, number>(\n    getSessionCostWallet\n  );\n  // percent transaction from cost wallet\n  const percent = useSelector<AppRootStateType, number>(getPercentTransaction);\n\n  const elementPage = active ? <Currency data={props} /> : <InformationPanel />;\n  return (\n    <section className=\"content content_pd20-30 content_pd10-15\">\n      <div className=\"content__wrapper\">\n        <div className=\"content__item content__item_grid1-3\">\n          <Wrapper>\n            <ProfileInfo />\n          </Wrapper>\n        </div>\n        <Wrapper>\n          <div className=\"content__item content__item_grid_container\">\n            <div className=\"content__title\">Balance Wallet:</div>\n            <div className=\"content__desc\">{costWallet} $</div>\n          </div>\n        </Wrapper>\n        <Wrapper>\n          <div className=\"content__item content__item_grid_container\">\n            <div className=\"content__title\">Session operation:</div>\n            <div className=\"content__desc\">{sessionCostWallet} $</div>\n            <div className=\"content__desc\">{percent} %</div>\n          </div>\n        </Wrapper>\n\n        <div className=\"content__item content__item_grid1-3\">\n          <Wrapper>\n            {loading && <Spinner />}\n            {elementPage}\n          </Wrapper>\n        </div>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/digital-wallet.61d97bb8.png\";","import { useSelector } from 'react-redux';\nimport { CurrencyType } from '../../api/api';\nimport { getTopCurrency, setLoading, setError } from '../../redux/selectors';\nimport { AppRootStateType } from '../../redux/store';\nimport { Spinner } from '../common/spinner/Spinner';\n\nimport './topCurrency.scss';\n\nexport const TopCurrency = () => {\n  const topCur = useSelector<AppRootStateType, CurrencyType[]>(getTopCurrency);\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n\n  const el = topCur.map((el) => {\n    const fix = (+el.priceUsd).toFixed(2);\n\n    return (\n      <div key={el.id} className=\"element\">\n        <span className=\"element__span element__span_text_color\">\n          {el.name}\n        </span>\n        <span className=\"element__span\">{fix}</span>\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"info info_pd20 info_pd20-0\">\n      {loading && <Spinner />}\n      <div className=\"info__title\">TOP CURRENCY</div>\n      {!loading && <div className=\"info__money\">{el}</div>}\n    </section>\n  );\n};\n","import './button.scss';\n\ntype ButtonPropsType = {\n  value: string;\n  active: boolean;\n  onChangeButton: (value: string) => void;\n};\n\nexport const ButtonMain = (props: ButtonPropsType): JSX.Element => {\n  const { value, active, onChangeButton } = props;\n  const clazz = active ? 'btn btn-custom btn-custom_active' : 'btn btn-custom';\n  return (\n    <button className={clazz} onClick={() => onChangeButton(value)}>\n      {value}\n    </button>\n  );\n};\n","import Logo from '../../icons/digital-wallet.png';\nimport './main.scss';\nimport { TopCurrency } from '../topCurrency/TopCurrency';\nimport { ButtonMain } from '../common/button/button';\n\ntype MainPropsType = {\n  activeBtn: boolean;\n  onChangeButton: (value: string) => void;\n};\n\nexport const Main = ({ activeBtn, onChangeButton }: MainPropsType) => {\n  const buttons = [\n    { value: 'Balance', active: activeBtn },\n    { value: 'Information panel', active: !activeBtn },\n  ];\n\n  const button = buttons.map((btn) => (\n    <ButtonMain\n      key={btn.value}\n      value={btn.value}\n      active={btn.active}\n      onChangeButton={onChangeButton}\n    />\n  ));\n  return (\n    <section className=\"main\">\n      <div className=\"main__header\">\n        <div className=\"logo logo_center logo_end\">\n          <img className=\"logo__img\" src={Logo} alt=\"Logo\" />\n        </div>\n        <h1 className=\"title\">Crypto-wallet</h1>\n      </div>\n      <div className=\"main__panel\">{button}</div>\n      <TopCurrency />\n    </section>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CurrencyType } from '../../../api/api';\nimport {\n  setCurrencyListTC,\n  setCurrentPageAC,\n  setTotalCounterTC,\n} from '../../../redux/currencyListReducer';\nimport {\n  getCurrentPage,\n  getDataCurrentCrypto,\n  getPerPage,\n  getTotalCount,\n} from '../../../redux/selectors';\nimport { AppRootStateType } from '../../../redux/store';\nimport { Content } from '../../content/Content';\nimport { Main } from '../../main/Main';\n\nimport './basePage.scss';\n\nexport const BasePage = () => {\n  const dispatch = useDispatch();\n  const [active, setActive] = useState<boolean>(true);\n\n  const currencyList = useSelector<AppRootStateType, CurrencyType[]>(\n    getDataCurrentCrypto\n  );\n  const totalCount = useSelector<AppRootStateType, number>(getTotalCount);\n  const currentPage = useSelector<AppRootStateType, number>(getCurrentPage);\n  const perPage = useSelector<AppRootStateType, number>(getPerPage);\n\n  useEffect(() => {\n    dispatch(setTotalCounterTC());\n    dispatch(setCurrencyListTC(currentPage, perPage));\n  }, [dispatch, currentPage, perPage]);\n\n  const onPageChange = (pageNumber: number) => {\n    pageNumber === 1 && dispatch(setCurrentPageAC(pageNumber - 1));\n    pageNumber > 1 && dispatch(setCurrentPageAC(+(pageNumber - 1 + '1')));\n  };\n  const onChangeButton = () => {\n    setActive(!active);\n  };\n\n  return (\n    <>\n      <div className=\"base-page base-page_mr\">\n        <div className=\"base-page__wrapper\">\n          <Main onChangeButton={onChangeButton} activeBtn={active} />\n          <Content\n            data={currencyList}\n            totalCount={totalCount}\n            currentPage={currentPage}\n            perPage={perPage}\n            onPageChange={onPageChange}\n            active={active}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport './notFound.scss';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"not-found not-found_mr20\">\n      <div className=\"row\">\n        <div className=\"col-md-6 align-self-center\">\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 800 600\"\n          >\n            <g>\n              <defs>\n                <clipPath id=\"GlassClip\">\n                  <path\n                    d=\"M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5\n                s-28.485-16.599-34.877-24.192c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13\n                c6.755-0.61,20.546-0.608,41.785,5.087s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\"\n                  />\n                </clipPath>\n                <clipPath id=\"cordClip\">\n                  <rect width=\"800\" height=\"600\" />\n                </clipPath>\n              </defs>\n\n              <g id=\"planet\">\n                <circle\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-miterlimit=\"10\"\n                  cx=\"572.859\"\n                  cy=\"108.803\"\n                  r=\"90.788\"\n                />\n\n                <circle\n                  id=\"craterBig\"\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-miterlimit=\"10\"\n                  cx=\"548.891\"\n                  cy=\"62.319\"\n                  r=\"13.074\"\n                />\n\n                <circle\n                  id=\"craterSmall\"\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-miterlimit=\"10\"\n                  cx=\"591.743\"\n                  cy=\"158.918\"\n                  r=\"7.989\"\n                />\n                <path\n                  id=\"ring\"\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-linecap=\"round\"\n                  stroke-miterlimit=\"10\"\n                  d=\"\n\t\t\tM476.562,101.461c-30.404,2.164-49.691,4.221-49.691,8.007c0,6.853,63.166,12.408,141.085,12.408s141.085-5.555,141.085-12.408\n\t\t\tc0-3.378-15.347-4.988-40.243-7.225\"\n                />\n\n                <path\n                  id=\"ringShadow\"\n                  opacity=\"0.5\"\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-linecap=\"round\"\n                  stroke-miterlimit=\"10\"\n                  d=\"\n\t\t\tM483.985,127.43c23.462,1.531,52.515,2.436,83.972,2.436c36.069,0,68.978-1.19,93.922-3.149\"\n                />\n              </g>\n              <g id=\"stars\">\n                <g id=\"starsBig\">\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"518.07\"\n                      y1=\"245.375\"\n                      x2=\"518.07\"\n                      y2=\"266.581\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"508.129\"\n                      y1=\"255.978\"\n                      x2=\"528.01\"\n                      y2=\"255.978\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"154.55\"\n                      y1=\"231.391\"\n                      x2=\"154.55\"\n                      y2=\"252.598\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"144.609\"\n                      y1=\"241.995\"\n                      x2=\"164.49\"\n                      y2=\"241.995\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"320.135\"\n                      y1=\"132.746\"\n                      x2=\"320.135\"\n                      y2=\"153.952\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"310.194\"\n                      y1=\"143.349\"\n                      x2=\"330.075\"\n                      y2=\"143.349\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"200.67\"\n                      y1=\"483.11\"\n                      x2=\"200.67\"\n                      y2=\"504.316\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"210.611\"\n                      y1=\"493.713\"\n                      x2=\"190.73\"\n                      y2=\"493.713\"\n                    />\n                  </g>\n                </g>\n                <g id=\"starsSmall\">\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"432.173\"\n                      y1=\"380.52\"\n                      x2=\"432.173\"\n                      y2=\"391.83\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"426.871\"\n                      y1=\"386.175\"\n                      x2=\"437.474\"\n                      y2=\"386.175\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"489.555\"\n                      y1=\"299.765\"\n                      x2=\"489.555\"\n                      y2=\"308.124\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"485.636\"\n                      y1=\"303.945\"\n                      x2=\"493.473\"\n                      y2=\"303.945\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"231.468\"\n                      y1=\"291.009\"\n                      x2=\"231.468\"\n                      y2=\"299.369\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"227.55\"\n                      y1=\"295.189\"\n                      x2=\"235.387\"\n                      y2=\"295.189\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"244.032\"\n                      y1=\"547.539\"\n                      x2=\"244.032\"\n                      y2=\"555.898\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"247.95\"\n                      y1=\"551.719\"\n                      x2=\"240.113\"\n                      y2=\"551.719\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"186.359\"\n                      y1=\"406.967\"\n                      x2=\"186.359\"\n                      y2=\"415.326\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"190.277\"\n                      y1=\"411.146\"\n                      x2=\"182.44\"\n                      y2=\"411.146\"\n                    />\n                  </g>\n                  <g>\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"480.296\"\n                      y1=\"406.967\"\n                      x2=\"480.296\"\n                      y2=\"415.326\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"484.215\"\n                      y1=\"411.146\"\n                      x2=\"476.378\"\n                      y2=\"411.146\"\n                    />\n                  </g>\n                </g>\n                <g id=\"circlesBig\">\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"588.977\"\n                    cy=\"255.978\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"450.066\"\n                    cy=\"320.259\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"168.303\"\n                    cy=\"353.753\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"429.522\"\n                    cy=\"201.185\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"200.67\"\n                    cy=\"176.313\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"133.343\"\n                    cy=\"477.014\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"283.521\"\n                    cy=\"568.033\"\n                    r=\"7.952\"\n                  />\n\n                  <circle\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"413.618\"\n                    cy=\"482.387\"\n                    r=\"7.952\"\n                  />\n                </g>\n                <g id=\"circlesSmall\">\n                  <circle fill=\"#0E0620\" cx=\"549.879\" cy=\"296.402\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"253.29\" cy=\"229.24\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"434.824\" cy=\"263.931\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"183.708\" cy=\"544.176\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"382.515\" cy=\"530.923\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"130.693\" cy=\"305.608\" r=\"2.651\" />\n                  <circle fill=\"#0E0620\" cx=\"480.296\" cy=\"477.014\" r=\"2.651\" />\n                </g>\n              </g>\n              <g id=\"spaceman\" clip-path=\"url(cordClip)\">\n                <path\n                  id=\"cord\"\n                  fill=\"none\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-miterlimit=\"10\"\n                  d=\"\n\t\t\tM273.813,410.969c0,0-54.527,39.501-115.34,38.218c-2.28-0.048-4.926-0.241-7.841-0.548\n\t\t\tc-68.038-7.178-134.288-43.963-167.33-103.87c-0.908-1.646-1.793-3.3-2.654-4.964c-18.395-35.511-37.259-83.385-32.075-118.817\"\n                />\n\n                <path\n                  id=\"backpack\"\n                  fill=\"#FFFFFF\"\n                  stroke=\"#0E0620\"\n                  stroke-width=\"3\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-miterlimit=\"10\"\n                  d=\"\n\t\t\tM338.164,454.689l-64.726-17.353c-11.086-2.972-17.664-14.369-14.692-25.455l15.694-58.537\n\t\t\tc3.889-14.504,18.799-23.11,33.303-19.221l52.349,14.035c14.504,3.889,23.11,18.799,19.221,33.303l-15.694,58.537\n\t\t\tC360.647,451.083,349.251,457.661,338.164,454.689z\"\n                />\n                <g id=\"antenna\">\n                  <line\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    x1=\"323.396\"\n                    y1=\"236.625\"\n                    x2=\"295.285\"\n                    y2=\"353.753\"\n                  />\n                  <circle\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"323.666\"\n                    cy=\"235.617\"\n                    r=\"6.375\"\n                  />\n                </g>\n                <g id=\"armR\">\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM360.633,363.039c1.352,1.061,4.91,5.056,5.824,6.634l27.874,47.634c3.855,6.649,1.59,15.164-5.059,19.02l0,0\n\t\t\t\tc-6.649,3.855-15.164,1.59-19.02-5.059l-5.603-9.663\"\n                  />\n\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM388.762,434.677c5.234-3.039,7.731-8.966,6.678-14.594c2.344,1.343,4.383,3.289,5.837,5.793\n\t\t\t\tc4.411,7.596,1.829,17.33-5.767,21.741c-7.596,4.411-17.33,1.829-21.741-5.767c-1.754-3.021-2.817-5.818-2.484-9.046\n\t\t\t\tC375.625,437.355,383.087,437.973,388.762,434.677z\"\n                  />\n                </g>\n                <g id=\"armL\">\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM301.301,347.66c-1.702,0.242-5.91,1.627-7.492,2.536l-47.965,27.301c-6.664,3.829-8.963,12.335-5.134,18.999h0\n\t\t\t\tc3.829,6.664,12.335,8.963,18.999,5.134l9.685-5.564\"\n                  />\n\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM241.978,395.324c-3.012-5.25-2.209-11.631,1.518-15.977c-2.701-0.009-5.44,0.656-7.952,2.096\n\t\t\t\tc-7.619,4.371-10.253,14.09-5.883,21.71c4.371,7.619,14.09,10.253,21.709,5.883c3.03-1.738,5.35-3.628,6.676-6.59\n\t\t\t\tC252.013,404.214,245.243,401.017,241.978,395.324z\"\n                  />\n                </g>\n                <g id=\"body\">\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM353.351,365.387c-7.948,1.263-16.249,0.929-24.48-1.278c-8.232-2.207-15.586-6.07-21.836-11.14\n\t\t\t\tc-17.004,4.207-31.269,17.289-36.128,35.411l-1.374,5.123c-7.112,26.525,8.617,53.791,35.13,60.899l0,0\n\t\t\t\tc26.513,7.108,53.771-8.632,60.883-35.158l1.374-5.123C371.778,395.999,365.971,377.536,353.351,365.387z\"\n                  />\n                  <path\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM269.678,394.912L269.678,394.912c26.3,20.643,59.654,29.585,93.106,25.724l2.419-0.114\"\n                  />\n                </g>\n                <g id=\"legs\">\n                  <g id=\"legR\">\n                    <path\n                      fill=\"#FFFFFF\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-miterlimit=\"10\"\n                      d=\"\n\t\t\t\t\tM312.957,456.734l-14.315,53.395c-1.896,7.07,2.299,14.338,9.37,16.234l0,0c7.07,1.896,14.338-2.299,16.234-9.37l17.838-66.534\n\t\t\t\t\tC333.451,455.886,323.526,457.387,312.957,456.734z\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"304.883\"\n                      y1=\"486.849\"\n                      x2=\"330.487\"\n                      y2=\"493.713\"\n                    />\n                  </g>\n                  <g id=\"legL\">\n                    <path\n                      fill=\"#FFFFFF\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-miterlimit=\"10\"\n                      d=\"\n\t\t\t\t\tM296.315,452.273L282,505.667c-1.896,7.07-9.164,11.265-16.234,9.37l0,0c-7.07-1.896-11.265-9.164-9.37-16.234l17.838-66.534\n\t\t\t\t\tC278.993,441.286,286.836,447.55,296.315,452.273z\"\n                    />\n\n                    <line\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-miterlimit=\"10\"\n                      x1=\"262.638\"\n                      y1=\"475.522\"\n                      x2=\"288.241\"\n                      y2=\"482.387\"\n                    />\n                  </g>\n                </g>\n                <g id=\"head\">\n                  <ellipse\n                    transform=\"matrix(0.259 -0.9659 0.9659 0.259 -51.5445 563.2371)\"\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    cx=\"341.295\"\n                    cy=\"315.211\"\n                    rx=\"61.961\"\n                    ry=\"60.305\"\n                  />\n                  <path\n                    id=\"headStripe\"\n                    fill=\"none\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM330.868,261.338c-7.929,1.72-15.381,5.246-21.799,10.246\"\n                  />\n\n                  <path\n                    fill=\"#FFFFFF\"\n                    stroke=\"#0E0620\"\n                    stroke-width=\"3\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-miterlimit=\"10\"\n                    d=\"\n\t\t\t\tM380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5s-28.485-16.599-34.877-24.192\n\t\t\t\tc-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13c6.755-0.61,20.546-0.608,41.785,5.087\n\t\t\t\ts33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\"\n                  />\n                  <g clip-path=\"url(#GlassClip)\">\n                    <polygon\n                      id=\"glassShine\"\n                      fill=\"none\"\n                      stroke=\"#0E0620\"\n                      stroke-width=\"3\"\n                      stroke-miterlimit=\"10\"\n                      points=\"\n\t\t\t\t\t278.436,375.599 383.003,264.076 364.393,251.618 264.807,364.928 \t\t\t\t\"\n                    />\n                  </g>\n                </g>\n              </g>\n            </g>\n          </svg>\n        </div>\n        <div className=\"col-md-6 align-self-center\">\n          <h1>404</h1>\n          <h2>UH OH! You're lost.</h2>\n          <p>\n            The page you are looking for does not exist. How you got here is a\n            mystery. But you can click the button below to go back to the\n            homepage.\n          </p>\n          <Link to={'/'}>\n            <button className=\"btn btn_color_green\">HOME</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Route, Switch } from 'react-router';\nimport { CostWallet } from '../costWallet/CostWallet';\nimport { Information } from '../information/Information';\nimport { BasePage } from '../page/BasePage/BasePage';\n\nimport { NotFound } from '../page/notFound/NotFound';\n\nexport const Routing = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path={'/'} render={() => <BasePage />} />\n        <Route path={'/assets/:id'} render={() => <Information />} />\n        <Route path={'/costwallet'} render={() => <CostWallet />} />\n        <Route path=\"*\" component={() => <NotFound />} />\n      </Switch>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/telegram_icon.15b4ae4f.svg\";","export default __webpack_public_path__ + \"static/media/facebook_icon.ce1fd112.svg\";","export default __webpack_public_path__ + \"static/media/google_icon.a9f89f88.svg\";","export default __webpack_public_path__ + \"static/media/discord_icon.dc3ee15e.svg\";","import Telegram from '../../icons/social/telegram_icon.svg';\nimport FaceBook from '../../icons/social/facebook_icon.svg';\nimport Google from '../../icons/social/google_icon.svg';\nimport Discord from '../../icons/social/discord_icon.svg';\nimport './socials.scss';\n\nexport const Socials = () => {\n  return (\n    <div className=\"socials socials_gap40\">\n      <img className=\"socials__image\" src={Telegram} alt=\"telegram\" />\n      <img className=\"socials__image\" src={FaceBook} alt=\"facebook\" />\n      <img className=\"socials__image\" src={Google} alt=\"google\" />\n      <img className=\"socials__image\" src={Discord} alt=\"discord\" />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderLogo from '../../icons/digital-wallet.png';\nimport { Socials } from '../socials/Socials';\n\nimport './header.scss';\n\nconst arrayItems = [\n  { name: 'Homepage', hash: '/' },\n  { name: 'Cost wallet', hash: '/costwallet' },\n  { name: 'About us', hash: '/about' },\n];\n\nexport const Header = () => {\n  const [click, setClick] = useState<boolean>(false);\n  const handleClick = () => {\n    setClick(!click);\n  };\n\n  const clazz = click ? 'header header_open' : 'header';\n\n  const item = arrayItems.map((item) => (\n    <Link\n      className=\"header__link\"\n      key={item.name}\n      to={item.hash}\n      onClick={handleClick}\n    >\n      <div className=\"header__item\">{item.name}</div>\n    </Link>\n  ));\n  return (\n    <>\n      {/* {MOB-HEADER} */}\n      <div className=\"mob-header mob-header_position\">\n        <button className=\"mob-header__menu\" onClick={handleClick}>\n          <div className={click ? 'mob-header__humbugger_active' : ''}>\n            <span className=\"mob-header__line\"></span>\n            <span className=\"mob-header__line\"></span>\n            <span className=\"mob-header__line\"></span>\n          </div>\n        </button>\n      </div>\n      {/* HEADER */}\n      <header className={clazz}>\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__logo\">\n              <img className=\"header__img\" src={HeaderLogo} alt=\"header-logo\" />\n            </div>\n            <div className=\"header__items\">{item}</div>\n            <Socials />\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n","import FooterLogo from '../../icons/digital-wallet.png';\nimport { Socials } from '../socials/Socials';\nimport './footer.scss';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer__wrapper\">\n          <img className=\"logo__img\" src={FooterLogo} alt=\"footer-logo\" />\n          <p className='footer__text'>© 2021 CRYPTO-WALLET</p>\n          <Socials />\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Routing } from '../routing/Routing';\nimport { Header } from '../header/Header';\nimport { Footer } from '../footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container>\n        <Routing />\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { saveState } from \"../utils/localStorageUtil\";\nimport { currencyListReducer } from \"./currencyListReducer\";\nimport { walletReducer } from './walletReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { appReducer } from \"./appReducer\";\nimport { CurrencyHistoryType, CurrencyType } from \"../api/api\";\n\nexport const rootReducer = combineReducers({\n  app: appReducer,\n  currencyList: currencyListReducer,\n  wallet: walletReducer,\n});\n\nlet preloadedState;\nconst persistedWalletString = localStorage.getItem('wallet')\nconst persistedCostWalletString = localStorage.getItem('costWallet');\nconst persistedCurrentPageString = localStorage.getItem('currentPage')\nif (persistedWalletString && persistedCostWalletString && persistedCurrentPageString) {\n  preloadedState = {\n    wallet: {\n      wallet: JSON.parse(persistedWalletString),\n      costWallet: JSON.parse(persistedCostWalletString),\n      sessionCostWallet: 0,\n      percentTransaction: 0,\n    },\n    currencyList: {\n      currency: [] as CurrencyType[],\n      currentCur: {} as CurrencyType,\n      topCurrency: [] as CurrencyType[],\n      chartHistory: [] as CurrencyHistoryType[],\n      currentPage: JSON.parse(persistedCurrentPageString),\n      perPage: 10,\n      totalCount: 0,\n    },\n  }\n}\n\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nstore.subscribe(() => {\n  saveState(store.getState().wallet.wallet, 'wallet')\n  saveState(store.getState().wallet.costWallet, 'costWallet')\n  saveState(store.getState().currencyList.currentPage, 'currentPage')\n})\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;","import { CurrencyWalletType } from \"../redux/walletReducer\";\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState) {\n      return JSON.parse(serializedState);\n    }\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: StateLocalStorageType, key: string) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\ntype StateLocalStorageType = CurrencyWalletType[] | number\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/app/App';\nimport './index.scss';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}