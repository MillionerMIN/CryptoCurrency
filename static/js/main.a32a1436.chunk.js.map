{"version":3,"sources":["api/api.ts","redux/appReducer.ts","redux/currencyListReducer.ts","components/common/barChart/BarChart.tsx","icons/parts/chevron-left.svg","redux/selectors.ts","components/common/isLoading/IsLoading.tsx","components/common/error/ModalError.tsx","components/information/Information.tsx","icons/person/avatar.svg","components/common/spinner/Spinner.tsx","components/header/Header.tsx","components/history/History.tsx","components/content/Content.tsx","components/common/modal/ModalWindow.tsx","redux/walletReducer.ts","components/common/item/Item.tsx","components/common/paginate/Paginate.tsx","icons/digital-wallet.png","icons/error/error-429.jpeg","components/common/error/messageError.tsx","components/main/Main.tsx","components/page/BasePage/BasePage.tsx","components/page/notFound/NotFound.tsx","components/routing/Routing.tsx","components/app/App.tsx","redux/store.ts","utils/localStorageUtil.ts","index.tsx"],"names":["instance","axios","create","baseURL","currencyAPI","get","offset","perPage","id","InitialAppState","isLoading","error","appReducer","state","action","type","text","setIsLoading","errorHandler","initialCurrencyState","currency","currentCur","topCurrency","chartHistory","currentPage","totalCount","setCurrentPageAC","BarChart","props","infoData","arrDate","map","i","date","slice","arrPriseUsd","priceUsd","data","labels","datasets","label","toUpperCase","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","setLoading","loading","setError","getDataCurrentCrypto","currencyList","getCurrentCrypto","getTopCurrency","getInfoCurrentCrypto","getTotalCount","getCurrentPage","getPerPage","getCostWallet","wallet","costWallet","getSessionCostWallet","sessionCostWallet","getPercentTransaction","percentTransaction","IsLoading","className","ModalError","Information","dispatch","useDispatch","useSelector","rank","symbol","marketCapUsd","supply","changePercent24Hr","volumeUsd24Hr","vwap24Hr","infoCurrentCrypto","useParams","useEffect","a","res","setCurrencyHistoryTC","setCurrentCurrencyTC","table","toFixed","to","src","ChevronLeft","alt","Spinner","Header","percent","topCur","el","fix","name","Ava","History","Content","ModalWindow","changeHandler","handleClose","useState","cur","setCur","Modal","show","onHide","animation","closeButton","Title","Body","InputGroup","Text","FormControl","aria-label","onChange","e","currentTarget","value","Footer","Button","variant","onClick","initialWalletState","Item","setShow","cost","history","useHistory","onShowCloseModal","clazz","push","numberCur","newCur","count","resultUsd","amount","removeCrypto","Paginate","pageSize","onPageChange","pageCounter","Math","ceil","pages","curPage","toString","page","MessageError","Error429","Main","items","item","Logo","BasePage","length","setCurrencyListTC","pageNumber","NotFound","Routing","exact","path","render","App","preloadedState","Container","saveState","key","serializedState","JSON","stringify","localStorage","setItem","rootReducer","combineReducers","filter","addAsset","find","removeAsset","persistedWalletString","getItem","persistedCostWalletString","persistedCurrentPageString","parse","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","getState","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a32a1436.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.coincap.io/v2/',\n})\n\n//API\nexport const currencyAPI = {\n  getStillCurrencyList() {\n    return instance.get<CurrencyListType>(`assets`)\n  },\n  getCurrencyList(offset: number, perPage: number) {\n    const promise = instance.get<CurrencyListType>(`assets?offset=${offset}&limit=${perPage}`)\n    return promise;\n  },\n  getCurrentCurrency(id: string) {\n    return instance.get<CurrentCurrencyType>(`assets/${id}`)\n  },\n  getTopCurrency(perPage: number) {\n    return instance.get<CurrencyListType>(`asses?limit=${perPage}`)\n  },\n  getCurrencyHistory(id: string) {\n    const promise = instance.get<CurrencyHistoryListType>(`assets/${id}/history?interval=d1`);\n    return promise;\n  }\n}\n\n//Type\nexport type CurrencyType = {\n  id: string\n  rank: string\n  symbol: string\n  name: string\n  supply: string\n  maxSupply: string\n  marketCapUsd: string\n  volumeUsd24Hr: string\n  priceUsd: string\n  changePercent24Hr: string\n  vwap24Hr: string\n}\n\nexport type CurrencyHistoryType = {\n  priceUsd: string,\n  time: number\n  date: string\n}\n\nexport type CurrencyHistoryListType = {\n  data: CurrencyHistoryType[]\n  timestamp: number\n}\nexport type CurrentCurrencyType = {\n  data: CurrencyType\n  timestamp: number\n}\n\nexport type CurrencyListType = {\n  data: CurrencyType[]\n  timestamp: number\n}\n\n","const InitialAppState = {\n  isLoading: false,\n  error: '' as RequestType\n}\n\n\n\nexport const appReducer = (state = InitialAppState, action: AppActionType): InitialAppStateType => {\n  switch (action.type) {\n    case 'SET-IS-LOADING':\n      return { ...state, isLoading: action.isLoading }\n    case 'ERROR-HANDLER':\n      return { ...state, error: action.text }\n    default:\n      return state\n  }\n}\n\nexport const setIsLoading = (isLoading: boolean) => ({\n  type: 'SET-IS-LOADING', isLoading\n} as const)\nexport const errorHandler = (text: RequestType) => ({ type: 'ERROR-HANDLER', text } as const)\n\ntype InitialAppStateType = typeof InitialAppState\n\ntype AppActionType = ReturnType<typeof setIsLoading> | ReturnType<typeof errorHandler>\n\nexport type RequestType = 'error' | ''","\nimport { Dispatch } from 'redux';\nimport { currencyAPI, CurrencyHistoryType, CurrencyType } from '../api/api';\nimport { errorHandler, setIsLoading } from './appReducer';\n\nconst initialCurrencyState = {\n  currency: [] as CurrencyType[],\n  currentCur: {} as CurrencyType,\n  topCurrency: [] as CurrencyType[],\n  chartHistory: [] as CurrencyHistoryType[],\n  currentPage: 0,\n  perPage: 10,\n  totalCount: 0,\n};\n\nexport const currencyListReducer = (\n  state = initialCurrencyState,\n  action: ActionsType\n): InitialCurrencyStateType => {\n  switch (action.type) {\n    case 'SET-CURRENCY':\n      return { ...state, currency: action.currencyList };\n    case 'SET-CURRENT-CURRENCY':\n      return { ...state, currentCur: action.currentCur };\n    case 'SET-TOP-CURRENCY':\n      return { ...state, topCurrency: action.topCurrency.filter(item => +item.rank <= 3) }\n    case 'GET-HISTORY':\n      return { ...state, chartHistory: action.chartHistory };\n    case 'SET-CURRENT-PAGE':\n      return { ...state, currentPage: action.currentPage };\n    case 'SET-TOTAL-COUNT':\n      return { ...state, totalCount: action.totalCount };\n    default:\n      return state;\n  }\n};\n\n//actions\nexport const setCurrencyAC = (currencyList: CurrencyType[]) =>\n  ({ type: 'SET-CURRENCY', currencyList } as const);\nexport const setCurrentCurrencyAC = (currentCur: CurrencyType) => (\n  { type: 'SET-CURRENT-CURRENCY', currentCur } as const)\nexport const setTopCurrency = (topCurrency: CurrencyType[]) => ({ type: 'SET-TOP-CURRENCY', topCurrency } as const)\nexport const getHistoryAC = (chartHistory: CurrencyHistoryType[]) =>\n  ({ type: 'GET-HISTORY', chartHistory } as const);\nexport const setCurrentPageAC = (currentPage: number) => (\n  { type: 'SET-CURRENT-PAGE', currentPage } as const)\nexport const setTotalCountAC = (totalCount: number) =>\n  ({ type: 'SET-TOTAL-COUNT', totalCount } as const)\n\n//Thunks\nexport const setCurrencyListTC = (currentPage: number, perPage: number) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    dispatch(setCurrentPageAC(currentPage))\n    const res = await currencyAPI.getCurrencyList(currentPage, perPage)\n    dispatch(setCurrencyAC(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(errorHandler('error'))\n    dispatch(setIsLoading(false))\n  }\n};\n\nexport const setCurrentCurrencyTC = (id: string) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getCurrentCurrency(id)\n    dispatch(setCurrentCurrencyAC(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\nexport const setCurrencyHistoryTC = (id: string) => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getCurrencyHistory(id)\n    dispatch(getHistoryAC(res.data.data));\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\nexport const setTotalCounterTC = () => async (dispatch: Dispatch<ActionsType>) => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await currencyAPI.getStillCurrencyList()\n    dispatch(setTotalCountAC(res.data.data.length))\n    dispatch(setTopCurrency(res.data.data))\n    dispatch(setIsLoading(false))\n  } catch (error) {\n    dispatch(setIsLoading(false))\n    dispatch(errorHandler('error'))\n  }\n}\n\ntype InitialCurrencyStateType = typeof initialCurrencyState;\n\ntype ActionsType =\n  | ReturnType<typeof setCurrencyAC>\n  | ReturnType<typeof setCurrentCurrencyAC>\n  | ReturnType<typeof setTopCurrency>\n  | ReturnType<typeof getHistoryAC>\n  | ReturnType<typeof setCurrentPageAC>\n  | ReturnType<typeof setTotalCountAC>\n  | ReturnType<typeof errorHandler>\n  | ReturnType<typeof setIsLoading>\n","import { Bar } from 'react-chartjs-2';\nimport { CurrencyHistoryType } from '../../../api/api';\n\ntype BarChartPropsType = {\n  id: string;\n  infoData: CurrencyHistoryType[];\n};\n\nexport const BarChart = (props: BarChartPropsType) => {\n  const { id, infoData } = props;\n  const arrDate = infoData.map((i) => i.date.slice(0, 10));\n  const arrPriseUsd = infoData.map((i) => i.priceUsd);\n\n  const data = {\n    labels: arrDate,\n    datasets: [\n      {\n        label: id.toUpperCase(),\n        data: arrPriseUsd,\n        backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)'],\n        borderColor: ['rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return <Bar data={data} options={options} />;\n};\n","export default __webpack_public_path__ + \"static/media/chevron-left.c80cdd8e.svg\";","import { AppRootStateType } from './store';\n\n//selectors appReducer\nexport const setLoading = (state: AppRootStateType) => {\n  return state.loading.isLoading\n}\nexport const setError = (state: AppRootStateType) => {\n  return state.error.error\n}\n\n//selects CurrencyListReducer\nexport const getDataCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.currency\n}\nexport const getCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.currentCur\n}\nexport const getTopCurrency = (state: AppRootStateType) => {\n  return state.currencyList.topCurrency\n}\nexport const getInfoCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.chartHistory\n}\nexport const getTotalCount = (state: AppRootStateType) => {\n  return state.currencyList.totalCount\n}\nexport const getCurrentPage = (state: AppRootStateType) => {\n  return state.currencyList.currentPage\n}\nexport const getPerPage = (state: AppRootStateType) => {\n  return state.currencyList.perPage\n}\n\n//selects Wallet-reducer\nexport const getCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.costWallet\n}\nexport const getSessionCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.sessionCostWallet\n}\nexport const getPercentTransaction = (state: AppRootStateType): number => {\n  return state.wallet.percentTransaction\n}","import './isLoading.scss';\n\nexport const IsLoading = () => {\n  return (\n    <div className=\"modalInner\">\n      <div className=\"isLoadingBlock\"></div>\n    </div>\n  );\n};\n","import './modalError.scss';\n\nexport const ModalError = () => {\n  return (\n    <div className=\"modal-error\">\n      <div className=\"modal-error__text\">\n        Network error !!! Reload this page\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n  setCurrencyHistoryTC,\n  setCurrentCurrencyTC,\n} from '../../redux/currencyListReducer';\nimport { AppRootStateType } from '../../redux/store';\nimport { BarChart } from '../common/barChart/BarChart';\nimport ChevronLeft from '../../icons/parts/chevron-left.svg';\nimport {\n  getCurrentCrypto,\n  getInfoCurrentCrypto,\n  setError,\n  setLoading,\n} from '../../redux/selectors';\nimport { CurrencyHistoryType, CurrencyType } from '../../api/api';\nimport './Information.scss';\nimport { IsLoading } from '../common/isLoading/IsLoading';\nimport { ModalError } from '../common/error/ModalError';\n\nexport const Information = () => {\n  const dispatch = useDispatch();\n  const {\n    rank,\n    symbol,\n    priceUsd,\n    marketCapUsd,\n    supply,\n    changePercent24Hr,\n    volumeUsd24Hr,\n    vwap24Hr,\n  } = useSelector<AppRootStateType, CurrencyType>(getCurrentCrypto);\n\n  const infoCurrentCrypto = useSelector<\n    AppRootStateType,\n    CurrencyHistoryType[]\n  >(getInfoCurrentCrypto);\n\n  const { id } = useParams<{ id: string }>();\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n  const error = useSelector<AppRootStateType, string>(setError);\n\n  useEffect(() => {\n    dispatch(setCurrencyHistoryTC(id));\n    dispatch(setCurrentCurrencyTC(id));\n  }, [dispatch, id]);\n\n  const table = (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Rank</th>\n          <th>Symbol</th>\n          <th>Price</th>\n          <th>Market Cap</th>\n          <th>Supply</th>\n          <th>Change 24Hr</th>\n          <th>Volume 24Hr</th>\n          <th>VWAP24Hr</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{rank}</td>\n          <td>{symbol}</td>\n          <td>{'$' + (+priceUsd).toFixed(2)}</td>\n          <td>{'$' + (+marketCapUsd).toFixed(2)}</td>\n          <td>{(+supply).toFixed(2) + 'm'}</td>\n          <td\n            className={\n              +changePercent24Hr > 0 ? 'table__text_up' : 'table__text_down'\n            }\n          >\n            {(+changePercent24Hr).toFixed(2) + '%'}\n          </td>\n          <td>{'$' + (+volumeUsd24Hr).toFixed(2)}</td>\n          <td>{'$' + (+vwap24Hr).toFixed(2)}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  return (\n    <section className=\"information information_mr20 information_pd15\">\n      {loading && <IsLoading />}\n      <div className=\"row\">\n        <div className=\"information__panel\">\n          <div>\n            <Link className=\"information__link\" to={`/`}>\n              <span>\n                <img src={ChevronLeft} alt=\"React Logo\" />\n                Back\n              </span>\n            </Link>\n          </div>\n        </div>\n        {error === 'error' && <ModalError />}\n        {table}\n        <div className=\"information__barChart\">\n          <BarChart infoData={infoCurrentCrypto} id={id} />\n        </div>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/avatar.eb51d125.svg\";","import './spinner.css';\n\nexport function Spinner() {\n  return (\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { CurrencyType } from '../../api/api';\nimport Ava from '../../icons/person/avatar.svg';\nimport {\n  getCostWallet,\n  getPercentTransaction,\n  getSessionCostWallet,\n  getTopCurrency,\n  setLoading,\n} from '../../redux/selectors';\nimport { AppRootStateType } from '../../redux/store';\nimport { Spinner } from '../common/spinner/Spinner';\n\nimport './header.scss';\n\nexport const Header = () => {\n  const costWallet = useSelector<AppRootStateType, number>(getCostWallet);\n  const sessionCostWallet = useSelector<AppRootStateType, number>(\n    getSessionCostWallet\n  );\n  // percent transaction from cost wallet\n  const percent = useSelector<AppRootStateType, number>(getPercentTransaction);\n  const topCur = useSelector<AppRootStateType, CurrencyType[]>(getTopCurrency);\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n\n  const el = topCur.map((el) => {\n    const fix = (+el.priceUsd).toFixed(2);\n\n    return (\n      <div key={el.id} className=\"element\">\n        <span className=\"element__span element__span_text_color\">\n          {el.name}\n        </span>\n        <span className=\"element__span\">{fix}</span>\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"header header_pd20\">\n      <div className=\"header__money\">\n        {loading && <Spinner />}\n        {el}\n      </div>\n      <div className=\"profile\">\n        <span className=\"profile__name\">profile@gmail.com</span>\n        <div className=\"profile__avatar\">\n          <img src={Ava} alt=\"ava\" />\n        </div>\n        <div className=\"profile__targets\">\n          <span>{costWallet} USD</span>\n          <span>{sessionCostWallet} USD</span>\n          <span>{percent} %</span>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import './History.scss';\n\nexport const History = () => {\n  return (\n    <section className=\"history\">\n      <h3 className=\"history__title\">History Transactions</h3>\n    </section>\n  );\n};\n","import './content.scss';\nimport { Header } from '../header/Header';\nimport { History } from '../history/History';\n\nexport const Content = () => {\n  return (\n    <section className=\"content content_pd20-30\">\n      <div className=\"content__wrapper\">\n        <Header />\n        <History />\n      </div>\n    </section>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\nimport { CurrencyType } from '../../../api/api';\n\nimport './modalWindow.scss';\n\ntype ModalWindowPropsType = {\n  data: CurrencyType;\n  handleClose: () => void;\n  changeHandler: (numberCur: number, value: string) => void;\n};\n\nexport const ModalWindow = (props: ModalWindowPropsType) => {\n  const { changeHandler, handleClose } = props;\n  const { id, priceUsd } = props.data;\n  const [cur, setCur] = useState<number>(0);\n\n  const onAddAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n  const onRemoveAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n\n  const onChangeValueInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setCur(+e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Modal show={true} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add in the Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text>{id}</InputGroup.Text>\n            <FormControl\n              type=\"number\"\n              aria-label=\"Amount (to the nearest dollar)\"\n              onChange={onChangeValueInput}\n            />\n            <InputGroup.Text>{priceUsd + ' $'}</InputGroup.Text>\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => onRemoveAssetsHandler('sale')}\n          >\n            Sale\n          </Button>\n          <Button variant=\"primary\" onClick={() => onAddAssetsHandler('buy')}>\n            Buy\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","const initialWalletState = {\n  wallet: [] as CurrencyWalletType[],\n  costWallet: 0,\n  sessionCostWallet: 0,\n  percentTransaction: 0,\n}\n\nexport const walletReducer = (state: InitialWalletStateType = initialWalletState, action: ActionsType): InitialWalletStateType => {\n\n  switch (action.type) {\n    case 'ADD-CRYPTO': {\n      const addAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (addAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd + action.amount.resultUsd;\n            item.count = item.count + action.amount.count;\n          }\n        })\n        const percentTransaction = +(action.amount.resultUsd * 100 / state.costWallet).toFixed(3)\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd, percentTransaction: percentTransaction }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n\n    case 'REMOVE-CRYPTO': {\n      const removeAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (removeAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd < action.amount.resultUsd ? item.resultUsd - item.resultUsd : item.resultUsd - action.amount.resultUsd\n            item.count = item.count < action.amount.count ? item.count - item.count : item.count - action.amount.count;\n          }\n        })\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n    case 'COST-WALLET': {\n      return {\n        ...state\n      }\n    }\n    default:\n      return state;\n  }\n}\n\n//action\nexport const addCrypto = (amount: CurrencyWalletType) => ({ type: 'ADD-CRYPTO', amount } as const)\nexport const removeCrypto = (amount: CurrencyWalletType) => ({ type: 'REMOVE-CRYPTO', amount } as const)\nexport const costWallet = (sum: string) => ({ type: 'COST-WALLET', sum } as const)\n\n\n//Type\nexport type CurrencyWalletType = {\n  id: string\n  count: number\n  resultUsd: number\n}\nexport type InitialWalletStateType = typeof initialWalletState\n\ntype ActionsType = ReturnType<typeof addCrypto> | ReturnType<typeof removeCrypto> | ReturnType<typeof costWallet> ","import { Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CurrencyType } from '../../../api/api';\nimport { ModalWindow } from '../modal/ModalWindow';\nimport './item.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCrypto, removeCrypto } from '../../../redux/walletReducer';\n\ntype ItemPropsType = {\n  data: CurrencyType;\n};\n\nexport const Item = (props: ItemPropsType) => {\n  const { symbol, name, priceUsd, id } = props.data;\n  const [show, setShow] = useState(false);\n  const cost = +priceUsd;\n  const history = useHistory();\n  const onInfoHandler = () => {\n    return history.push(`/assets/${id}`);\n  };\n  const onShowCloseModal = () => {\n    setShow(!show);\n  };\n\n  const dispatch = useDispatch();\n  //Handler Buy and Sale currency\n  const onChangeHandler = (numberCur: number, value: string) => {\n    const newCur = {\n      id: id,\n      count: numberCur,\n      resultUsd: numberCur * +priceUsd,\n    };\n    if (value === 'buy') {\n      dispatch(addCrypto(newCur));\n      setShow(!show);\n    }\n    if (value === 'sale') {\n      dispatch(removeCrypto(newCur));\n      setShow(!show);\n    }\n  };\n  //Function is check even number\n  function isEven(value: number) {\n    return !(value % 2);\n  }\n  const clazz = isEven(+props.data.rank) ? 'item_bg' : '';\n\n  return (\n    <div className={`item item_mb item_pd ${clazz}`}>\n      <Link onClick={onInfoHandler} className=\"item__link\" to={`/assets/${id}`}>\n        <div className=\"item__symbol\">{symbol}</div>\n        <div className=\"item__text\">{name}</div>\n        <div className=\"item__cost\">{cost.toFixed(2)}</div>\n      </Link>\n      <Button variant=\"outline-success\" onClick={onShowCloseModal}>\n        +\n      </Button>\n      {show && (\n        <ModalWindow\n          handleClose={onShowCloseModal}\n          changeHandler={onChangeHandler}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n};\n","import './paginate.scss';\n\ntype PaginatePropsType = {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Paginate = (props: PaginatePropsType) => {\n  const { totalCount, pageSize, currentPage, onPageChange } = props;\n\n  //getting the right number of buttons\n  const pageCounter = Math.ceil(totalCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pageCounter; i++) {\n    pages.push(i);\n  }\n\n  const curPage = currentPage ? +currentPage.toString()[0] + 1 : 1;\n\n  return (\n    <div className=\"paginate\">\n      {pages.map((page) => (\n        <span\n          key={page}\n          className={\n            curPage === page\n              ? 'paginate__span paginate__span_active'\n              : 'paginate__span'\n          }\n          onClick={() => {\n            onPageChange(page);\n          }}\n        >\n          {page}\n        </span>\n      ))}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/digital-wallet.61d97bb8.png\";","export default __webpack_public_path__ + \"static/media/error-429.55b8d755.jpeg\";","import Error429 from '../../../icons/error/error-429.jpeg';\n\nexport const MessageError = () => {\n  return (\n    <div className=\"message-error\">\n      <img src={Error429} alt=\"error429\" />\n    </div>\n  );\n};\n","import { CurrencyType } from '../../api/api';\nimport { Item } from '../common/item/Item';\nimport { Paginate } from '../common/paginate/Paginate';\nimport Logo from '../../icons/digital-wallet.png';\nimport './main.scss';\nimport { Spinner } from '../common/spinner/Spinner';\nimport { useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../redux/store';\nimport { setError, setLoading } from '../../redux/selectors';\nimport { MessageError } from '../common/error/messageError';\n\ntype MainPropsType = {\n  data: CurrencyType[];\n  totalCount: number;\n  currentPage: number;\n  perPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Main = (props: MainPropsType) => {\n  const { data, totalCount, currentPage, perPage, onPageChange } = props;\n  const loading = useSelector<AppRootStateType, boolean>(setLoading);\n  const items = data.map((item) => <Item key={item.id} data={item} />);\n  const error = useSelector<AppRootStateType, string>(setError);\n\n  return (\n    <section className=\"main\">\n      <div className=\"main__header\">\n        <div className=\"logo logo_center\">\n          <img className=\"logo__img\" src={Logo} alt=\"Logo\" />\n        </div>\n        <h1 className=\"title\">Crypto-wallet</h1>\n      </div>\n      <div className=\"main__items\">\n        {loading && <Spinner />}\n        {error ? <MessageError /> : items}\n      </div>\n      <Paginate\n        totalCount={totalCount}\n        pageSize={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </section>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CurrencyType } from '../../../api/api';\nimport {\n  setCurrencyListTC,\n  setCurrentPageAC,\n  setTotalCounterTC,\n} from '../../../redux/currencyListReducer';\nimport {\n  getCurrentPage,\n  getDataCurrentCrypto,\n  getPerPage,\n  getTotalCount,\n} from '../../../redux/selectors';\nimport { AppRootStateType } from '../../../redux/store';\nimport { Content } from '../../content/Content';\nimport { Main } from '../../main/Main';\n\nimport './basePage.scss';\n\nexport const BasePage = () => {\n  const dispatch = useDispatch();\n  const currencyList = useSelector<AppRootStateType, CurrencyType[]>(\n    getDataCurrentCrypto\n  );\n\n  const totalCount = useSelector<AppRootStateType, number>(getTotalCount);\n  const currentPage = useSelector<AppRootStateType, number>(getCurrentPage);\n  const perPage = useSelector<AppRootStateType, number>(getPerPage);\n\n  useEffect(() => {\n    dispatch(setTotalCounterTC());\n    dispatch(setCurrencyListTC(currentPage, perPage));\n  }, [dispatch, currentPage, perPage]);\n\n  const onPageChange = (pageNumber: number) => {\n    pageNumber === 1 && dispatch(setCurrentPageAC(pageNumber - 1));\n    pageNumber > 1 && dispatch(setCurrentPageAC(+(pageNumber - 1 + '1')));\n  };\n\n  return (\n    <div className=\"base-page base-page_mr\">\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <Main\n            data={currencyList}\n            totalCount={totalCount}\n            currentPage={currentPage}\n            perPage={perPage}\n            onPageChange={onPageChange}\n          />\n        </div>\n        <div className=\"col-8\">\n          <Content />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <div>\n      <h1>NOT FOUND 404</h1>\n    </div>\n  );\n};\n","import { Route, Switch } from 'react-router';\nimport { Information } from '../information/Information';\nimport { BasePage } from '../page/BasePage/BasePage';\n\nimport { NotFound } from '../page/notFound/NotFound';\n\nexport const Routing = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path={'/'} render={() => <BasePage />} />\n        <Route path={'/404'} render={() => <NotFound />} />\n        <Route path={'/assets/:id'} render={() => <Information />} />\n      </Switch>\n    </>\n  );\n};\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Routing } from '../routing/Routing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Routing />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { saveState } from \"../utils/localStorageUtil\";\nimport { currencyListReducer } from \"./currencyListReducer\";\nimport { walletReducer } from './walletReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { appReducer } from \"./appReducer\";\nimport { CurrencyHistoryType, CurrencyType } from \"../api/api\";\n\nexport const rootReducer = combineReducers({\n  loading: appReducer,\n  error: appReducer,\n  currencyList: currencyListReducer,\n  wallet: walletReducer,\n});\n\nlet preloadedState;\nconst persistedWalletString = localStorage.getItem('wallet')\nconst persistedCostWalletString = localStorage.getItem('costWallet');\nconst persistedCurrentPageString = localStorage.getItem('currentPage')\nif (persistedWalletString && persistedCostWalletString && persistedCurrentPageString) {\n  preloadedState = {\n    wallet: {\n      wallet: JSON.parse(persistedWalletString),\n      costWallet: JSON.parse(persistedCostWalletString),\n      sessionCostWallet: 0,\n      percentTransaction: 0,\n    },\n    currencyList: {\n      currency: [] as CurrencyType[],\n      currentCur: {} as CurrencyType,\n      topCurrency: [] as CurrencyType[],\n      chartHistory: [] as CurrencyHistoryType[],\n      currentPage: JSON.parse(persistedCurrentPageString),\n      perPage: 10,\n      totalCount: 0,\n    },\n  }\n}\n\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nstore.subscribe(() => {\n  saveState(store.getState().wallet.wallet, 'wallet')\n  saveState(store.getState().wallet.costWallet, 'costWallet')\n  saveState(store.getState().currencyList.currentPage, 'currentPage')\n})\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;","import { CurrencyWalletType } from \"../redux/walletReducer\";\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState) {\n      return JSON.parse(serializedState);\n    }\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: StateLocalStorageType, key: string) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\ntype StateLocalStorageType = CurrencyWalletType[] | number\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/app/App';\nimport './index.scss';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}