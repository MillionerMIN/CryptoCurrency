{"version":3,"sources":["api/Api.ts","redux/currencyList-reducer.ts","components/common/barChart/BarChart.tsx","icons/parts/chevron-left.svg","redux/selectots.ts","components/information/Information.tsx","components/common/modal/ModalWindow.tsx","redux/wallet-reducer.ts","components/common/item/Item.tsx","components/common/paginate/Paginate.tsx","icons/digital-wallet.png","components/main/Main.tsx","icons/person/avatar.svg","components/header/Header.tsx","components/history/History.tsx","components/page/Page.tsx","components/layout/Layout.tsx","components/page/notFound/NotFound.tsx","components/routing/Routing.tsx","components/app/App.tsx","redux/store.ts","utils/localStorageUtil.ts","index.tsx"],"names":["instance","axios","create","baseURL","currencyAPI","get","id","initialCurrencyState","currency","chartHistory","setCurrencyListTC","dispatch","then","res","type","currencyList","data","BarChart","props","infoData","arrDate","map","i","date","slice","arrPriseUsd","priceUsd","labels","datasets","label","toUpperCase","backgroundColor","borderColor","borderWidth","className","options","scales","y","beginAtZero","getDataCurrentCrypto","state","getInfoCurrentCrypto","getCostWallet","wallet","costWallet","getSessionCostWallet","sessionCostWallet","getPercentTransaction","percentTransaction","Information","infoCurrentCrypto","useSelector","dataCurrentCrypto","useParams","useDispatch","useEffect","setCurrencyHistoryTC","table","el","rank","symbol","toFixed","marketCapUsd","supply","changePercent24Hr","volumeUsd24Hr","maxSupply","to","src","ChevronLeft","alt","ModalWindow","changeHandler","handleClose","useState","cur","setCur","Modal","show","onHide","animation","Header","closeButton","Title","Body","InputGroup","Text","FormControl","aria-label","onChange","e","currentTarget","value","Footer","Button","variant","onClick","initialWalletState","Item","name","setShow","cost","history","useHistory","onShowCloseModal","push","numberCur","newCur","count","resultUsd","amount","removeCrypto","Paginate","totalCount","pageSize","currentPage","onPageChange","pageCounter","Math","ceil","pages","page","Main","currencyTotalCount","length","setCurrentPage","lastCurrencyIndex","firstCurrencyIndex","element","item","Logo","pageNumber","percent","filter","fix","Ava","History","Page","Layout","store","NotFound","Routing","exact","path","render","App","preloadedState","Container","saveState","key","serializedState","JSON","stringify","localStorage","setItem","rootReducer","combineReducers","action","addAsset","find","removeAsset","persistedWalletString","getItem","persistedCostWalletString","parse","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","getState","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6409f6c1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.coincap.io/',\n})\n\n//API\nexport const currencyAPI = {\n  getCurrencyList() {\n    const promise = instance.get<CurrencyListType>('v2/assets')\n    return promise;\n  },\n  getCurrencyHistory(id: string) {\n    const promise = instance.get<CurrencyHistoryListType>(`v2/assets/${id}/history?interval=d1`);\n    return promise;\n  }\n}\n\n//Type\nexport type CurrencyType = {\n  id: string\n  rank: string\n  symbol: string\n  name: string\n  supply: string\n  maxSupply: string\n  marketCapUsd: string\n  volumeUsd24Hr: string\n  priceUsd: string\n  changePercent24Hr: string\n  vwap24Hr: string\n}\n\nexport type CurrencyHistoryType = {\n  priceUsd: string,\n  time: number\n  date: string\n}\n\nexport type CurrencyHistoryListType = {\n  data: CurrencyHistoryType[]\n  timestamp: number\n}\n\nexport type CurrencyListType = {\n  data: CurrencyType[]\n  timestamp: number\n}\n\n","import { currencyAPI, CurrencyHistoryType, CurrencyType } from '../api/Api';\nimport { Dispatch } from 'redux';\n\nconst initialCurrencyState = {\n  currency: [] as CurrencyType[],\n  chartHistory: [] as CurrencyHistoryType[],\n};\n\nexport const currencyListReducer = (\n  state = initialCurrencyState,\n  action: ActionsType\n): InitialCurrencyStateType => {\n  switch (action.type) {\n    case 'SET-CURRENCY':\n      return { ...state, currency: action.currencyList };\n    case 'GET-HISTORY':\n      return { ...state, chartHistory: action.chartHistory };\n    default:\n      return state;\n  }\n};\n//actions\nexport const getCurrencyAC = (currencyList: CurrencyType[]) =>\n  ({ type: 'SET-CURRENCY', currencyList } as const);\nexport const getHistoryAC = (chartHistory: CurrencyHistoryType[]) =>\n  ({ type: 'GET-HISTORY', chartHistory } as const);\n\n//Thunks\n\nexport const setCurrencyListTC = () => (dispatch: Dispatch<ActionsType>) => {\n  currencyAPI.getCurrencyList().then((res) => {\n    dispatch(getCurrencyAC(res.data.data));\n  });\n};\n\nexport const setCurrencyHistoryTC = (id: string) => (dispatch: Dispatch<ActionsType>) => {\n  currencyAPI.getCurrencyHistory(id)\n    .then((res) => {\n      dispatch(getHistoryAC(res.data.data));\n    });\n}\n\ntype InitialCurrencyStateType = typeof initialCurrencyState;\n\ntype ActionsType =\n  | ReturnType<typeof getCurrencyAC>\n  | ReturnType<typeof getHistoryAC>;\n","import { Bar } from 'react-chartjs-2';\nimport { CurrencyHistoryType } from '../../../api/Api';\n\ntype BarChartPropsType = {\n  id: string;\n  infoData: CurrencyHistoryType[];\n};\n\nexport const BarChart = (props: BarChartPropsType) => {\n  const { id, infoData } = props;\n  const arrDate = infoData.map((i) => i.date.slice(0, 10));\n  const arrPriseUsd = infoData.map((i) => i.priceUsd);\n\n  const data = {\n    labels: arrDate,\n    datasets: [\n      {\n        label: id.toUpperCase(),\n        data: arrPriseUsd,\n        backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(75, 192, 192, 0.2)'],\n        borderColor: ['rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <>\n      <div className=\"chart\">\n        <Bar data={data} options={options} />\n      </div>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/chevron-left.c80cdd8e.svg\";","import { AppRootStateType } from './store';\n\n\n//selects CurrencyList-reducer\nexport const getDataCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.currency\n}\nexport const getInfoCurrentCrypto = (state: AppRootStateType) => {\n  return state.currencyList.chartHistory\n}\n\n\n//selects Wallet-reducer\nexport const getCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.costWallet\n}\nexport const getSessionCostWallet = (state: AppRootStateType): number => {\n  return state.wallet.sessionCostWallet\n}\nexport const getPercentTransaction = (state: AppRootStateType): number => {\n  return state.wallet.percentTransaction\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { CurrencyHistoryType, CurrencyType } from '../../api/Api';\nimport {\n  setCurrencyHistoryTC,\n  setCurrencyListTC,\n} from '../../redux/currencyList-reducer';\nimport { AppRootStateType } from '../../redux/store';\nimport { BarChart } from '../common/barChart/BarChart';\nimport ChevronLeft from '../../icons/parts/chevron-left.svg';\nimport {\n  getDataCurrentCrypto,\n  getInfoCurrentCrypto,\n} from '../../redux/selectots';\n\nimport './Information.scss';\n\nexport const Information = () => {\n  const infoCurrentCrypto = useSelector<\n    AppRootStateType,\n    CurrencyHistoryType[]\n  >(getInfoCurrentCrypto);\n  const dataCurrentCrypto = useSelector<AppRootStateType, CurrencyType[]>(\n    getDataCurrentCrypto\n  );\n\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCurrencyListTC());\n    dispatch(setCurrencyHistoryTC(id));\n  }, [dispatch, id]);\n\n  const table = dataCurrentCrypto.map(\n    (el) =>\n      el.id === id && (\n        <table key={el.id}>\n          <tbody>\n            <tr>\n              <th>Rank</th>\n              <th>Symbol</th>\n              <th>Price Usd</th>\n              <th>Market Cap Usd</th>\n              <th>Supply</th>\n              <th>Change Percent 24Hr</th>\n              <th>Volume usd 24Hr</th>\n              <th>Max Supply</th>\n            </tr>\n            <tr>\n              <td>{el.rank}</td>\n              <td>{el.symbol}</td>\n              <td>{(+el.priceUsd).toFixed(2)}</td>\n              <td>{(+el.marketCapUsd).toFixed(2)}</td>\n              <td>{(+el.supply).toFixed(2)}</td>\n              <td className={+el.changePercent24Hr > 0 ? 'up' : 'down'}>\n                {(+el.changePercent24Hr).toFixed(2)}\n              </td>\n              <td>{(+el.volumeUsd24Hr).toFixed(2)}</td>\n              <td>{(+el.maxSupply).toFixed(2)}</td>\n            </tr>\n          </tbody>\n        </table>\n      )\n  );\n\n  return (\n    <div className=\"row information\">\n      <div className=\"information__panel\">\n        <div>\n          <Link className=\"link\" to={`/`}>\n            <span>\n              <img src={ChevronLeft} alt=\"React Logo\" />\n              Back\n            </span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"information__table\">{table}</div>\n      <div className=\"information__barChart\">\n        <BarChart infoData={infoCurrentCrypto} id={id} />\n      </div>\n    </div>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport { Button, FormControl, InputGroup, Modal } from 'react-bootstrap';\nimport { CurrencyType } from '../../../api/Api';\n\nimport './ModalWindow.scss';\n\ntype ModalWindowPropsType = {\n  data: CurrencyType;\n  handleClose: () => void;\n  changeHandler: (numberCur: number, value: string) => void;\n};\n\nexport const ModalWindow = (props: ModalWindowPropsType) => {\n  const { changeHandler, handleClose } = props;\n  const { id, priceUsd } = props.data;\n  const [cur, setCur] = useState<number>(0);\n\n  const onAddAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n  const onRemoveAssetsHandler = (value: string) =>\n    cur !== 0 && changeHandler(cur, value);\n\n  const onChangeValueInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setCur(+e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <Modal show={true} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add in the Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text>{id}</InputGroup.Text>\n            <FormControl\n              type=\"number\"\n              aria-label=\"Amount (to the nearest dollar)\"\n              onChange={onChangeValueInput}\n            />\n            <InputGroup.Text>{priceUsd + ' $'}</InputGroup.Text>\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => onRemoveAssetsHandler('sale')}\n          >\n            Sale\n          </Button>\n          <Button variant=\"primary\" onClick={() => onAddAssetsHandler('buy')}>\n            Buy\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","const initialWalletState = {\n  wallet: [] as CurrencyWalletType[],\n  costWallet: 0,\n  sessionCostWallet: 0,\n  percentTransaction: 0,\n}\n\nexport const walletReducer = (state: InitialWalletStateType = initialWalletState, action: ActionsType): InitialWalletStateType => {\n\n  switch (action.type) {\n    case 'ADD-CRYPTO': {\n      const addAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (addAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd + action.amount.resultUsd;\n            item.count = item.count + action.amount.count;\n          }\n        })\n        const percentTransaction = +(action.amount.resultUsd * 100 / state.costWallet).toFixed(3)\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd, percentTransaction: percentTransaction }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet + action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n\n    case 'REMOVE-CRYPTO': {\n      const removeAsset = state.wallet.find(item => item.id === action.amount.id);\n      if (removeAsset) {\n        state.wallet.map(item => {\n          if (item.id === action.amount.id) {\n            item.resultUsd = item.resultUsd < action.amount.resultUsd ? item.resultUsd - item.resultUsd : item.resultUsd - action.amount.resultUsd\n            item.count = item.count < action.amount.count ? item.count - item.count : item.count - action.amount.count;\n          }\n        })\n        return { ...state, wallet: [...state.wallet], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n      }\n      return { ...state, wallet: [...state.wallet, action.amount], costWallet: state.costWallet < action.amount.resultUsd ? state.costWallet - state.costWallet : state.costWallet - action.amount.resultUsd, sessionCostWallet: action.amount.resultUsd }\n    }\n    case 'COST-WALLET': {\n      return {\n        ...state\n      }\n    }\n    default:\n      return state;\n  }\n}\n\n//action\nexport const addCrypto = (amount: CurrencyWalletType) => ({ type: 'ADD-CRYPTO', amount } as const)\nexport const removeCrypto = (amount: CurrencyWalletType) => ({ type: 'REMOVE-CRYPTO', amount } as const)\nexport const costWallet = (sum: string) => ({ type: 'COST-WALLET', sum } as const)\n\n\n//Type\nexport type CurrencyWalletType = {\n  id: string\n  count: number\n  resultUsd: number\n}\nexport type InitialWalletStateType = typeof initialWalletState\n\ntype ActionsType = ReturnType<typeof addCrypto> | ReturnType<typeof removeCrypto> | ReturnType<typeof costWallet> ","import { Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CurrencyType } from '../../../api/Api';\nimport { ModalWindow } from '../modal/ModalWindow';\nimport './Item.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCrypto, removeCrypto } from '../../../redux/wallet-reducer';\n\ntype ItemPropsType = {\n  data: CurrencyType;\n};\n\nexport const Item = (props: ItemPropsType) => {\n  const { symbol, name, priceUsd, id } = props.data;\n  const [show, setShow] = useState(false);\n  const cost = +priceUsd;\n  const history = useHistory();\n  const onInfoHandler = () => {\n    return history.push(`/assets/${id}`);\n  };\n  const onShowCloseModal = () => {\n    setShow(!show);\n  };\n\n  const dispatch = useDispatch();\n  const onChangeHandler = (numberCur: number, value: string) => {\n    const newCur = {\n      id: id,\n      count: numberCur,\n      resultUsd: numberCur * +priceUsd,\n    };\n    if (value === 'buy') {\n      dispatch(addCrypto(newCur));\n      setShow(!show);\n    }\n    if (value === 'sale') {\n      dispatch(removeCrypto(newCur));\n      setShow(!show);\n    }\n  };\n\n  return (\n    <div className=\"item\">\n      <Link onClick={onInfoHandler} className=\"link\" to={`/assets/${id}`}>\n        <div className=\"symbol\">{symbol}</div>\n        <div className=\"text\">{name}</div>\n        <div className=\"cost\">{cost.toFixed(2)}</div>\n      </Link>\n      <Button variant=\"outline-success\" onClick={onShowCloseModal}>\n        +\n      </Button>\n      {show && (\n        <ModalWindow\n          handleClose={onShowCloseModal}\n          changeHandler={onChangeHandler}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n};\n","import './Paginate.scss';\n\ntype PaginatePropsType = {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Paginate = (props: PaginatePropsType) => {\n  const { totalCount, pageSize, currentPage, onPageChange } = props;\n\n  //getting the right number of buttons\n  const pageCounter = Math.ceil(totalCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pageCounter; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className=\"paginate\">\n      {pages.map((page) => (\n        <span\n          key={page}\n          className={currentPage === page ? 'active' : ''}\n          onClick={() => {\n            onPageChange(page);\n          }}\n        >\n          {page}\n        </span>\n      ))}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/digital-wallet.61d97bb8.png\";","import { useState } from 'react';\nimport { CurrencyType } from '../../api/Api';\nimport { Item } from '../common/item/Item';\n\nimport { Paginate } from '../common/paginate/Paginate';\nimport Logo from '../../icons/digital-wallet.png';\nimport './Main.scss';\n\ntype MainPropsType = {\n  data: CurrencyType[];\n};\n\nexport const Main = (props: MainPropsType) => {\n  const { data } = props;\n\n  const currencyTotalCount = data.length;\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const counterPerPage = 10;\n\n  const lastCurrencyIndex = currentPage * counterPerPage;\n  const firstCurrencyIndex = lastCurrencyIndex - counterPerPage;\n  const currentElement = data.slice(firstCurrencyIndex, lastCurrencyIndex);\n\n  const onPageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const element = currentElement.map((item) => (\n    <Item key={item.id} data={item} />\n  ));\n\n  return (\n    <section className=\"main\">\n      <div className=\"main-logo\">\n        <div className=\"logo\">\n          <img src={Logo} alt=\"Logo\" />\n        </div>\n        <h1>Crypto-wallet</h1>\n      </div>\n      <div className=\"items\">{element}</div>\n      <Paginate\n        totalCount={currencyTotalCount}\n        pageSize={counterPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/avatar.eb51d125.svg\";","import { useSelector } from 'react-redux';\nimport { CurrencyType } from '../../api/Api';\nimport Ava from '../../icons/person/avatar.svg';\nimport {\n  getCostWallet,\n  getPercentTransaction,\n  getSessionCostWallet,\n} from '../../redux/selectots';\nimport { AppRootStateType } from '../../redux/store';\n\nimport './Header.scss';\n\ntype HeaderPropsType = {\n  data: CurrencyType[];\n};\n\nexport const Header = (props: HeaderPropsType) => {\n  const { data } = props;\n  const costWallet = useSelector<AppRootStateType, number>(getCostWallet);\n  const sessionCostWallet = useSelector<AppRootStateType, number>(\n    getSessionCostWallet\n  );\n  // percent transaction from cost wallet\n  const percent = useSelector<AppRootStateType, number>(getPercentTransaction);\n\n  const newData = data.filter((item) => +item.rank <= 3);\n\n  const el = newData.map((el) => {\n    const fix = (+el.priceUsd).toFixed(2);\n\n    return (\n      <div key={el.id}>\n        <span className=\"element\">{el.name}</span>\n        <span>{fix}</span>\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"header\">\n      <div className=\"header__money\">{el}</div>\n      <div className=\"header__profile\">\n        <span>profile@gmail.com</span>\n        <div className=\"header__profile__avatar\">\n          <img src={Ava} alt=\"ava\" />\n        </div>\n        <div className=\"header__profile__targets\">\n          <span>{costWallet} USD</span>\n          <span>{sessionCostWallet} USD</span>\n          <span>{percent} %</span>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import './History.scss';\n\nexport const History = () => {\n  return (\n    <section className=\"history\">\n      <h3 className=\"history__title\">History Transactions</h3>\n    </section>\n  );\n};\n","import './Page.scss';\nimport { Header } from '../header/Header';\nimport { CurrencyType } from '../../api/Api';\nimport { History } from '../history/History';\n\ntype PagePropsType = {\n  data: CurrencyType[];\n};\n\nexport const Page = (props: PagePropsType) => {\n  const { data } = props;\n\n  return (\n    <section className=\"page\">\n      <div className=\"page__wrapper\">\n        <Header data={data} />\n        <History />\n      </div>\n    </section>\n  );\n};\n","import { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CurrencyType } from '../../api/Api';\nimport { setCurrencyListTC } from '../../redux/currencyList-reducer';\nimport { AppRootStateType } from '../../redux/store';\nimport { Main } from '../main/Main';\nimport { Page } from '../page/Page';\nimport './Layout.scss';\n\nexport const Layout = () => {\n  const currencyList = useSelector<AppRootStateType, CurrencyType[]>(\n    (store) => store.currencyList.currency\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCurrencyListTC());\n\n  }, [dispatch]);\n\n  return (\n    <div className=\"row layout\">\n      <div className=\"col-4\">\n        <Main data={currencyList} />\n      </div>\n      <div className=\"col-8\">\n        <Page data={currencyList} />\n      </div>\n    </div>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <div>\n      <h1>NOT FOUND 404</h1>\n    </div>\n  );\n};\n","import { Route, Switch } from 'react-router';\nimport { Information } from '../information/Information';\nimport { Layout } from '../layout/Layout';\nimport { NotFound } from '../page/notFound/NotFound';\n\nexport const Routing = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path={'/'} render={() => <Layout />} />\n        <Route path={'/404'} render={() => <NotFound />} />\n        <Route path={'/assets/:id'} render={() => <Information />} />\n      </Switch>\n    </>\n  );\n};\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Routing } from '../routing/Routing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Routing />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { saveState } from \"../utils/localStorageUtil\";\nimport { currencyListReducer } from \"./currencyList-reducer\";\nimport { walletReducer } from './wallet-reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const rootReducer = combineReducers({\n  currencyList: currencyListReducer,\n  wallet: walletReducer,\n});\n\nlet preloadedState;\nconst persistedWalletString = localStorage.getItem('wallet')\nconst persistedCostWalletString = localStorage.getItem('costWallet');\nif (persistedWalletString && persistedCostWalletString) {\n  preloadedState = {\n    wallet: {\n      wallet: JSON.parse(persistedWalletString),\n      costWallet: JSON.parse(persistedCostWalletString),\n      sessionCostWallet: 0,\n      percentTransaction: 0,\n    }\n  }\n}\n\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nstore.subscribe(() => {\n  saveState(store.getState().wallet.wallet, 'wallet')\n  saveState(store.getState().wallet.costWallet, 'costWallet')\n})\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;","import { CurrencyWalletType } from \"../redux/wallet-reducer\";\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState) {\n      return JSON.parse(serializedState);\n    }\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: StateLocalStorageType, key: string) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\ntype StateLocalStorageType = CurrencyWalletType[] | number\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/app/App';\nimport './index.css';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}